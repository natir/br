(function() {var implementors = {};
implementors["br"] = [{"text":"impl RefUnwindSafe for ScenarioOne","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScenarioOneIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScenarioTwo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScenarioTwoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !RefUnwindSafe for Exist&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for GapSize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Graph&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Greedy&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IO","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hash","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pcon","synthetic":true,"types":[]}];
implementors["br_large"] = [{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
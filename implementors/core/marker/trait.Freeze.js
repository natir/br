(function() {var implementors = {};
implementors["br"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"br/correct/exist/one/enum.ScenarioOne.html\" title=\"enum br::correct::exist::one::ScenarioOne\">ScenarioOne</a>","synthetic":true,"types":["br::correct::exist::one::ScenarioOne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"br/correct/exist/one/struct.ScenarioOneIter.html\" title=\"struct br::correct::exist::one::ScenarioOneIter\">ScenarioOneIter</a>","synthetic":true,"types":["br::correct::exist::one::ScenarioOneIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"br/correct/exist/two/enum.ScenarioTwo.html\" title=\"enum br::correct::exist::two::ScenarioTwo\">ScenarioTwo</a>","synthetic":true,"types":["br::correct::exist::two::ScenarioTwo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"br/correct/exist/two/struct.ScenarioTwoIter.html\" title=\"struct br::correct::exist::two::ScenarioTwoIter\">ScenarioTwoIter</a>","synthetic":true,"types":["br::correct::exist::two::ScenarioTwoIter"]},{"text":"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"br/correct/exist/struct.Exist.html\" title=\"struct br::correct::exist::Exist\">Exist</a>&lt;'a, S&gt;","synthetic":true,"types":["br::correct::exist::Exist"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"br/correct/gap_size/struct.GapSize.html\" title=\"struct br::correct::gap_size::GapSize\">GapSize</a>&lt;'a&gt;","synthetic":true,"types":["br::correct::gap_size::GapSize"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"br/correct/graph/struct.Graph.html\" title=\"struct br::correct::graph::Graph\">Graph</a>&lt;'a&gt;","synthetic":true,"types":["br::correct::graph::Graph"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"br/correct/greedy/struct.Greedy.html\" title=\"struct br::correct::greedy::Greedy\">Greedy</a>&lt;'a&gt;","synthetic":true,"types":["br::correct::greedy::Greedy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"br/error/enum.Error.html\" title=\"enum br::error::Error\">Error</a>","synthetic":true,"types":["br::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"br/error/enum.Cli.html\" title=\"enum br::error::Cli\">Cli</a>","synthetic":true,"types":["br::error::Cli"]},{"text":"impl Freeze for <a class=\"enum\" href=\"br/error/enum.IO.html\" title=\"enum br::error::IO\">IO</a>","synthetic":true,"types":["br::error::IO"]},{"text":"impl Freeze for <a class=\"struct\" href=\"br/set/hash/struct.Hash.html\" title=\"struct br::set::hash::Hash\">Hash</a>","synthetic":true,"types":["br::set::hash::Hash"]},{"text":"impl Freeze for <a class=\"struct\" href=\"br/set/pcon/struct.Pcon.html\" title=\"struct br::set::pcon::Pcon\">Pcon</a>","synthetic":true,"types":["br::set::pcon::Pcon"]}];
implementors["br_large"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"br_large/struct.Command.html\" title=\"struct br_large::Command\">Command</a>","synthetic":true,"types":["br_large::Command"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
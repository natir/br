var searchIndex = JSON.parse('{\
"br":{"doc":"","t":[5,0,0,0,5,0,5,5,8,11,10,0,0,0,0,11,10,3,8,10,11,11,10,10,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,0,11,11,11,13,13,6,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,4,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,8,10,0,10,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["build_methods","cli","correct","error","run_correction","set","set_nb_threads","i82level","Corrector","correct","correct_error","exist","gap_size","graph","greedy","k","valid_kmer","Exist","Scenario","apply","borrow","borrow_mut","c","correct","correct_error","deref","deref_mut","drop","from","from_subset","get_score","init","init","into","is_in_subset","new","one","one_more","to_subset","to_subset_unchecked","try_from","try_into","two","type_id","valid_kmer","vzip","D","I","One","S","ScenarioOne","ScenarioOneIter","apply","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","correct","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_subset","from_subset","init","init","init","into","into","into_iter","is_in_subset","is_in_subset","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","1","1","1","DCD","DCI","DD","ICD","ICI","ICS","II","IS","SCD","SCI","SCS","SD","SS","ScenarioTwo","ScenarioTwoIter","Two","apply","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","correct","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_subset","from_subset","init","init","init","into","into","into_iter","is_in_subset","is_in_subset","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","GapSize","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","ins_sub_correction","into","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","Graph","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","Greedy","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","k","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","CantComputeAbundance","CantCreateFile","CantOpenFile","CantParseAbundanceMethod","Cli","Cli","Error","ErrorDurringRead","ErrorDurringWrite","IO","IO","KmerSolidNeedK","NoError","NoSolidityNoKmer","NotSameNumberOfInAndOut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","source","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","BoxKmerSet","KmerSet","get","hash","k","pcon","Hash","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","get","init","into","is_in_subset","k","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Pcon","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","get","init","into","is_in_subset","k","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":["br","","","","","","","br::cli","br::correct","","","","","","","","","br::correct::exist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","br::correct::exist::one","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","br::correct::exist::one::ScenarioOne","","","","","","br::correct::exist::two","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","br::correct::exist::two::ScenarioTwo","","","","","","","","","","","","","","","","","","","","","","","","","","br::correct::gap_size","","","","","","","","","","","","","","","","","","","","","br::correct::graph","","","","","","","","","","","","","","","","","","","","br::correct::greedy","","","","","","","","","","","","","","","","","","","","","br::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","br::error::Error","","br::set","","","","","","br::set::hash","","","","","","","","","","","","","","","","","","","","br::set::pcon","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Set the number of threads use by count step","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","We can’t create file. In C binding it’s equal to 0","We can’t open file. In C binding it’s equal to 1","","Error emmit durring Cli parsing","See enum Cli","All error produce by Pcon","Error durring read file. In C binding it’s equal to 3","Error durring write in file. In C binding it’s equal to 2","Error emmit when pcon try to work with file","See enum IO","","No error, this exist only for C binding it’s the value …","","Number of inputs and outputs must be the same","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,2,3,3,2,2,3,3,3,3,3,3,2,2,3,3,3,3,0,2,3,3,3,3,0,3,3,3,4,4,0,4,0,0,4,4,5,4,5,4,4,5,4,5,4,4,5,4,5,4,5,4,4,5,4,5,4,4,5,4,5,5,4,5,4,5,5,5,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,6,7,8,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,9,9,10,9,10,9,9,10,9,10,9,9,10,9,10,9,10,9,9,10,9,10,9,9,10,9,10,10,9,10,9,10,10,10,10,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,11,12,13,14,15,16,17,18,19,20,21,22,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,28,28,29,0,27,0,28,28,0,27,29,28,29,29,27,29,28,27,29,28,27,29,28,27,29,28,27,29,28,27,27,29,29,28,28,27,27,27,29,28,27,29,28,27,29,28,27,29,28,27,29,28,27,27,29,28,27,29,28,27,29,28,27,29,28,27,29,28,27,29,28,27,29,28,30,31,0,0,32,0,32,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[[[["option",4,[["vec",3,[["string",3]]]]],["boxkmerset",6],["u8",0],["u8",0]],["vec",3,[["box",3,[["corrector",8]]]]]],null,null,null,[[["vec",3,[["box",3,[["corrector",8]]]]],["bool",0],["usize",0]],["result",6]],null,[[["usize",0]]],[[["i8",0]],["option",4,[["level",4]]]],null,[[["",0]],["vec",3,[["u8",0]]]],[[["",0],["u64",0]],["option",4]],null,null,null,null,[[["",0]],["u8",0]],[[["",0]],["boxkmerset",6]],null,null,[[["",0],["boxkmerset",6],["u64",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0],["boxkmerset",6],["u64",0]]],[[["",0],["u64",0]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[["",0],["boxkmerset",6],["u64",0]],["usize",0]],[[["",0],["usize",0],["u8",0]]],[[],["usize",0]],[[]],[[["",0]],["bool",0]],[[["boxkmerset",6],["u8",0]]],null,[[["",0],["boxkmerset",6],["u64",0]],["bool",0]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["boxkmerset",6]],[[]],null,null,null,null,null,null,[[["",0],["boxkmerset",6],["u64",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]],["scenarioone",4]],[[["",0]],["scenariooneiter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["boxkmerset",6],["u64",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[["",0],["usize",0],["u8",0]]],[[],["usize",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["scenariooneiter",3]],[[["",0]],["usize",0]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["usize",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["boxkmerset",6],["u64",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]],["scenariotwo",4]],[[["",0]],["scenariotwoiter",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["boxkmerset",6],["u64",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[["",0],["usize",0],["u8",0]]],[[],["usize",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["scenariotwoiter",3]],[[["",0]],["usize",0]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["usize",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["u64",0]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[["",0],["u64",0],["usize",0]],["option",4]],[[]],[[["",0]],["bool",0]],[[["boxkmerset",6],["u8",0]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["boxkmerset",6]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["u64",0]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["",0]],["bool",0]],[[["boxkmerset",6]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["boxkmerset",6]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["u64",0]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["boxkmerset",6],["u8",0],["u8",0]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["boxkmerset",6]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["io",4]]],[[["cli",4]]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[["",0],["u64",0]],["bool",0]],null,[[["",0]],["u8",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[["",0],["u64",0]],["bool",0]],[[],["usize",0]],[[]],[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["vec",3],["u8",0]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[["",0],["u64",0]],["bool",0]],[[],["usize",0]],[[]],[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["solid",3]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]]],"p":[[8,"Corrector"],[8,"Scenario"],[3,"Exist"],[4,"ScenarioOne"],[3,"ScenarioOneIter"],[13,"I"],[13,"S"],[13,"D"],[4,"ScenarioTwo"],[3,"ScenarioTwoIter"],[13,"II"],[13,"IS"],[13,"SS"],[13,"SD"],[13,"DD"],[13,"ICI"],[13,"ICS"],[13,"ICD"],[13,"SCI"],[13,"SCS"],[13,"SCD"],[13,"DCI"],[13,"DCD"],[3,"GapSize"],[3,"Graph"],[3,"Greedy"],[4,"Error"],[4,"IO"],[4,"Cli"],[13,"Cli"],[13,"IO"],[8,"KmerSet"],[3,"Hash"],[3,"Pcon"]]},\
"br_large":{"doc":"","t":[3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,5,12,12,12,12,12,11,11,11,11,12,11,11,12,11],"n":["Command","augment_args","augment_args_for_update","borrow","borrow_mut","confirm","deref","deref_mut","drop","fmt","from","from_arg_matches","from_subset","init","inputs","into","into_app","into_app_for_update","is_in_subset","kmer_size","kmer_solid","main","max_search","methods","outputs","record_buffer","threads","to_subset","to_subset_unchecked","try_from","try_into","two_side","type_id","update_from_arg_matches","verbosity","vzip"],"q":["br_large","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","number of kmer need to be solid after one, greedy …","","","","","Returns the argument unchanged.","","","","fasta file to be correct","Calls <code>U::from(self)</code>.","","","","kmer length lower or equal to 32","use kmer present in fasta file as solid kmer and store …","","number of base we use to try correct error, default value …","correction method used, methods are applied in the order …","path where corrected read was write","Number of sequence record load in buffer, default 8192","Number of thread use by br, 0 use all avaible core, …","","","","","if this flag is set br correct only in forward orientation","","","verbosity level also control by environment variable …",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["argmatches",3]],["result",4,[["error",3]]]],[[["",0]]],[[],["usize",0]],null,[[]],[[],["app",3]],[[],["app",3]],[[["",0]],["bool",0]],null,null,[[],["result",6]],null,null,null,null,null,[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0],["argmatches",3]],["result",4,[["error",3]]]],null,[[]]],"p":[[3,"Command"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};
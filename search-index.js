var searchIndex = new Map(JSON.parse('[\
["br",{"doc":"Brutal rewrite","t":"HCCCHCGFGFPPPFPPPPPPPPPFPGPPPPFPPGGPNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKEEEEENMCCCCNMFKMNNMMNNNNNNNMNNNNCNNNNNCNNNPPIPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPGFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNPPPPGPPPIPNNNNNNNNNNNNNNNNNNNNNNIEKEMCMCFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNN","n":["build_methods","cli","correct","error","run_correction","set","AbundanceSelection","Command","CorrectionMethod","Count","Count","Csv","Csv","Fasta","Fasta","Fasta","Fasta","Fastq","Fastq","FirstMinimum","GapSize","Graph","Greedy","LargeKmer","LargeKmer","LargeKmerInput","One","PercentLeast","PercentMost","Rarefaction","Solid","Solid","Solid","SolidInput","SubCommand","Two","abundance","abundance","abundance_selection","abundance_selection","abundance_selection","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","command_for_update","confirm","corrections","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","input","input","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kmer_size","kmer_size","kmer_size","max_search","outputs","quiet","record_buffer","record_buffer","subcommand","timestamp","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_possible_value","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two_side","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","value_variants","value_variants","verbosity","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","percent","percent","percent","Corrector","GapSize","Graph","Greedy","One","Two","correct","correct_error","exist","gap_size","graph","greedy","k","valid_kmer","Exist","Scenario","apply","borrow","borrow_mut","c","correct","correct_error","deref","deref_mut","drop","from","from_subset","get_score","init","init","into","is_in_subset","new","one","one_more","to_subset","to_subset_unchecked","try_from","try_into","two","type_id","valid_kmer","vzip","D","I","One","S","ScenarioOne","ScenarioOneIter","apply","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","correct","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_subset","from_subset","init","init","init","into","into","into_iter","is_in_subset","is_in_subset","iter","len","next","next_back","nth","par_bridge","size_hint","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DCD","DCI","DD","ICD","ICI","ICS","II","IS","SCD","SCI","SCS","SD","SS","ScenarioTwo","ScenarioTwoIter","Two","apply","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","correct","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_subset","from_subset","init","init","init","into","into","into_iter","is_in_subset","is_in_subset","iter","len","next","next_back","nth","par_bridge","size_hint","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GapSize","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","ins_sub_correction","into","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","Graph","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","Greedy","borrow","borrow_mut","correct_error","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","k","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","valid_kmer","vzip","AbundanceThresholdOrAbundanceMethod","ComputeAbundanceThreshold","CsvMissingFirstColumn","Err","Error","IO","Log","Ok","Result","SolidRequireKmerSize","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from_subset","init","into","is_in_subset","source","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BoxKmerSet","Hash","KmerSet","Pcon","get","hash","k","pcon","Hash","borrow","borrow_mut","deref","deref_mut","drop","from","from_csv","from_fasta","from_fastq","from_subset","get","init","into","is_in_subset","k","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Pcon","borrow","borrow_mut","deref","deref_mut","drop","from","from_csv","from_fasta","from_fastq","from_pcon_solid","from_subset","get","init","into","is_in_subset","k","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"br"],[6,"br::cli"],[301,"br::cli::AbundanceSelection"],[304,"br::correct"],[318,"br::correct::exist"],[347,"br::correct::exist::one"],[405,"br::correct::exist::two"],[473,"br::correct::gap_size"],[494,"br::correct::graph"],[514,"br::correct::greedy"],[535,"br::error"],[567,"br::set"],[575,"br::set::hash"],[597,"br::set::pcon"],[621,"alloc::vec"],[622,"alloc::boxed"],[623,"std::io"],[624,"std::io"],[625,"core::option"],[626,"clap_builder::builder::command"],[627,"core::fmt"],[628,"core::fmt"],[629,"clap_builder"],[630,"core::result"],[631,"clap_builder::util::id"],[632,"stderrlog"],[633,"clap_builder::builder::possible_value"],[634,"core::any"],[635,"strum"],[636,"rayon::iter::par_bridge"],[637,"std::io::error"],[638,"log"],[639,"core::error"],[640,"alloc::string"],[641,"pcon::solid"]],"d":["","Command Line Interface declaration of project br","","Error struct of project br","","Trait for hashset","Enumeration of abundance selection","Brutal Rewrite, a kmer read corrector","","SubCommand Count","With Count","","","SubCommand Fasta","With Fasta","","","","","First Minimum","","","","SubCommand LargeKmer","Large Kmer mode","","","PercentLeast","PercentMost","Rarefaction","SubCommand Solid","With Solid","","","Enumeration of subcommand","","Get abundance","Get abundance","Get abundance selection method","Get abundance selection method","Abundance selection method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get confirm","Get correction method","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get format","Get format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get input","Get input","Get inputs","Get inputs","Get inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get size of kmer","Get size of kmer","Get size of kmer","Get confirm","Get output","Get quiet","Get record buffer","Number of sequence record load in buffer, default 8192","SubCommand","Get timestamp granularity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get two_side","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get verbosity level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An iterator over the variants of ScenarioOne","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of ScenarioTwo","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","In count and reads subcommand user should set minimum …","Found minimal threshold failled","Csv didn’t contains first column","Contains the error value","Enum to manage error","Error in input output","Error in logging system configuration","Contains the success value","Alias of result","In solid mode csv, fasta and fastq format require kmer size","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","HashSet","","Pcon set","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,26,20,21,0,26,20,21,20,21,18,1,1,1,0,26,0,1,18,18,18,0,26,20,0,0,1,14,17,14,17,17,22,14,17,27,28,22,14,17,27,28,26,18,26,18,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,1,18,20,21,1,18,20,21,22,22,22,22,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,27,28,1,22,26,14,18,17,20,27,21,28,22,26,14,18,17,27,28,22,26,14,18,17,27,28,1,22,26,14,18,17,20,27,21,28,22,14,17,27,28,26,18,1,22,26,14,18,17,20,27,21,28,27,28,22,14,17,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,17,27,28,22,22,22,22,22,22,22,1,18,20,21,1,20,21,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,1,22,26,14,18,17,20,27,21,28,22,1,22,26,14,18,17,20,27,21,28,22,26,14,18,17,27,28,22,26,14,18,17,27,28,1,20,21,22,1,22,26,14,18,17,20,27,21,28,58,59,60,0,0,0,0,0,0,5,5,0,0,0,0,5,5,0,0,38,39,39,38,38,39,39,39,39,39,39,38,38,39,39,39,39,0,38,39,39,39,39,0,39,39,39,41,41,0,41,0,0,41,41,42,41,42,41,41,42,41,42,41,41,42,41,42,41,42,41,42,41,42,41,42,41,41,42,41,42,42,41,42,41,42,42,42,42,42,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,44,44,45,44,45,44,44,45,44,45,44,44,45,44,45,44,45,44,45,44,45,44,45,44,44,45,44,45,45,44,45,44,45,45,45,45,45,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,13,0,49,49,13,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,54,0,54,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":"{{{d{b}}fhh}{{d{{l{j}}}}}}```{{{A`{{l{n}}}}{A`{{l{Ab}}}}{d{{l{j}}}}AdAf}{{Aj{Ah}}}}```````````````````````````````{Al{{B`{An}}}}{Bb{{B`{An}}}}{Al{{B`{Bd}}}}{Bb{{B`{Bd}}}}`{BfBf}0000000000000{ce{}{}}0000000000000000000{bb}{BdBd}{BhBh}{BjBj}{{ce}Ah{}{}}000{{}Bf}0{Blh}{Bl{{d{b}}}}{Bnc{}}0000000000000000000{BnAh}000000000{{bC`}Cb}{{BlC`}Cb}{{CdC`}Cb}{{AlC`}Cb}{{BdC`}Cb}{{BbC`}Cb}{{BhC`}Cb}{{CfC`}Cb}{{BjC`}Cb}{{ChC`}Cb}{CfBh}{ChBj}{cc{}}000000000{Cj{{Cn{BlCl}}}}{Cj{{Cn{CdCl}}}}{Cj{{Cn{AlCl}}}}{Cj{{Cn{BdCl}}}}{Cj{{Cn{BbCl}}}}{Cj{{Cn{CfCl}}}}{Cj{{Cn{ChCl}}}}6543210{ce{}{}}000000000{{}{{B`{D`}}}}0000{DbAd}0{{}Bn}000000000{Cf{{Aj{{l{n}}}}}}{Ch{{Aj{{l{n}}}}}}{Bl{{Aj{{d{{l{n}}}}}}}}{Al{{Aj{{l{n}}}}}}{Bb{{Aj{{l{n}}}}}}8888888888{cAd{}}000000000{Bbh}{Cf{{B`{h}}}}{Chh}{Blh}{Bl{{Aj{{d{{l{Ab}}}}}}}}{BlAd}{BlAf}``{BlDd}{ce{}{}}000{b{{B`{Df}}}}{Bh{{B`{Df}}}}{Bj{{B`{Df}}}}{c{{B`{e}}}{}{}}0000000004444444444{c{{Cn{e}}}{}{}}00000000000000000008{cDh{}}000000000{{BlCj}{{Cn{AhCl}}}}{{CdCj}{{Cn{AhCl}}}}{{AlCj}{{Cn{AhCl}}}}{{BdCj}{{Cn{AhCl}}}}{{BbCj}{{Cn{AhCl}}}}{{CfCj}{{Cn{AhCl}}}}{{ChCj}{{Cn{AhCl}}}}6543210{{}{{A`{b}}}}{{}{{A`{Bh}}}}{{}{{A`{Bj}}}}{BlBn}{ce{}{}}000000000`````````{{j{A`{h}}}{{d{h}}}}{{jAf{A`{h}}}{{B`{{Dj{{d{h}}Bn}}}}}}````{jh}{jf}``{{DlfAf{A`{h}}}{{B`{{Dj{AfBn}}}}}}55{DlBn}{{DlfAf{A`{h}}}{{Dj{{d{h}}Bn}}}}{{{Dn{c}}Af{A`{h}}}{{B`{{Dj{{d{h}}Bn}}}}}{DlE`}}{Bnc{}}0{BnAh}{cc{}};{{DlfAf{A`{h}}}Bn}{{DlBnh}Dl}{{}Bn}>{cAd{}}{{fh}{{Dn{c}}}{DlE`}}`{{DlfAf{A`{h}}}Ad}{c{{B`{e}}}{}{}}{ce{}{}}{c{{Cn{e}}}{}{}}0`{cDh{}}{{{Dn{c}}}f{DlE`}}3``````{{EbfAf{A`{h}}}{{B`{{Dj{AfBn}}}}}}4444{EbBn}{EbEb}{EdEd}{{ce}Ah{}{}}0{{EbfAf{A`{h}}}{{Dj{{d{h}}Bn}}}}{Bnc{}}000{BnAh}0{{EbC`}Cb}{{EdC`}Cb}{cc{}}0>>{{}Bn}{{EbBnh}Eb}1{ce{}{}}00{cAd{}}0{{}Ed}{EdBn}{Ed{{B`{c}}}{}}0{{EdBn}{{B`{c}}}{}}{c{{Ef{e}}}{}{}}{Ed{{Dj{Bn{B`{Bn}}}}}}77{c{{B`{e}}}{}{}}088{c{{Cn{e}}}{}{}}000{cDh{}}0::````````````````{{EhfAf{A`{h}}}{{B`{{Dj{AfBn}}}}}};;;;{EhBn}{EhEh}{EjEj}{{ce}Ah{}{}}0{{EhfAf{A`{h}}}{{Dj{{d{h}}Bn}}}}{Bnc{}}000{BnAh}0{{EhC`}Cb}{{EjC`}Cb}{cc{}}0{ce{}{}}0{{EhBnh}Eh}{{}Bn}0222{cAd{}}0{{}Ej}{EjBn}{Ej{{B`{c}}}{}}0{{EjBn}{{B`{c}}}{}}{c{{Ef{e}}}{}{}}{Ej{{Dj{Bn{B`{Bn}}}}}}99{c{{B`{e}}}{}{}}0::{c{{Cn{e}}}{}{}}000{cDh{}}0<<`<<{{ElAf{A`{h}}}{{B`{{Dj{{d{h}}Bn}}}}}}{Bnc{}}0{BnAh}{cc{}}{ce{}{}}?{{ElAfBn}{{B`{{Dj{{d{h}}Bn}}}}}}1?{{fh}El}92887{Elf}3`33{{EnAf{A`{h}}}{{B`{{Dj{{d{h}}Bn}}}}}}77654{{}Bn}5{cAd{}}{fEn}>7==<{Enf}8`88{{F`Af{A`{h}}}{{B`{{Dj{{d{h}}Bn}}}}}}<<;:9493{F`h}{{fhh}F`}{c{{B`{e}}}{}{}}<{c{{Cn{e}}}{}{}}0{cDh{}}{F`f}?``````````??{Bnc{}}0{BnAh}{{FbC`}Cb}0{FdFb}{FfFb}{cc{}}{ce{}{}}{{}Bn}1{cAd{}}{Fb{{B`{Fh}}}}{cFj{}}>4==<4````{{FlAf}Ad}`{Flh}``66<<;7{{ch}{{Aj{Fn}}}n}{{ch}Fnn}08{{FnAf}Ad}897{Fnh}{c{{B`{e}}}{}{}};{c{{Cn{e}}}{}{}}0{cDh{}}=`=={Bnc{}}0{BnAh}{cc{}}{{ch}{{Aj{G`}}}n}{{ch}G`n}0{c{{Aj{G`}}}n}{ce{}{}}{{G`Af}Ad}{{}Bn}2{cAd{}}{G`h}{GbG`}>5==<5","c":[],"p":[[6,"CorrectionMethod",6],[5,"Vec",621],[8,"BoxKmerSet",567],[1,"u8"],[10,"Corrector",304],[5,"Box",622],[10,"BufRead",623],[1,"slice"],[10,"Write",623],[1,"bool"],[1,"u64"],[1,"unit"],[8,"Result",535],[5,"Count",6],[8,"CountTypeNoAtomic",624],[6,"Option",625],[5,"Fasta",6],[6,"AbundanceSelection",6],[5,"Command",626],[6,"SolidInput",6],[6,"LargeKmerInput",6],[5,"Command",6],[1,"usize"],[5,"Formatter",627],[8,"Result",627],[6,"SubCommand",6],[5,"Solid",6],[5,"LargeKmer",6],[5,"ArgMatches",628],[8,"Error",629],[6,"Result",630],[5,"Id",631],[1,"str"],[6,"Timestamp",632],[5,"PossibleValue",633],[5,"TypeId",634],[1,"tuple"],[10,"Scenario",318],[5,"Exist",318],[10,"IntoEnumIterator",635],[6,"ScenarioOne",347],[5,"ScenarioOneIter",347],[5,"IterBridge",636],[6,"ScenarioTwo",405],[5,"ScenarioTwoIter",405],[5,"GapSize",473],[5,"Graph",494],[5,"Greedy",514],[6,"Error",535],[5,"Error",637],[5,"SetLoggerError",638],[10,"Error",639],[5,"String",640],[10,"KmerSet",567],[5,"Hash",575],[5,"Pcon",597],[5,"Solid",641],[15,"Rarefaction",301],[15,"PercentMost",301],[15,"PercentLeast",301]],"b":[[550,"impl-Debug-for-Error"],[551,"impl-Display-for-Error"],[552,"impl-From%3CError%3E-for-Error"],[553,"impl-From%3CSetLoggerError%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);

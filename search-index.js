var searchIndex = JSON.parse('{\
"br":{"doc":"","i":[[0,"cli","br","",null,null],[3,"Command","br::cli","",null,null],[12,"solidity","","",0,null],[12,"kmer_size","","",0,null],[12,"inputs","","",0,null],[12,"outputs","","",0,null],[12,"abundance","","",0,null],[12,"methods","","",0,null],[12,"confirm","","",0,null],[12,"max_search","","",0,null],[12,"two_side","","",0,null],[12,"threads","","",0,null],[12,"record_buffer","","",0,null],[12,"verbosity","","",0,null],[5,"check_params","","",null,[[["command",3]],[["result",6],["command",3],["error",4]]]],[5,"i82level","","",null,[[],[["level",4],["option",4]]]],[5,"read_or_compute_solidity","","",null,[[["option",4],["option",4],["string",3]],[["result",6],["boxkmerset",6]]]],[0,"correct","br","",null,null],[0,"gap_size","br::correct","",null,null],[3,"GapSize","br::correct::gap_size","",null,null],[11,"new","","",1,[[["boxkmerset",6]]]],[11,"ins_sub_correction","","",1,[[],["option",4]]],[0,"graph","br::correct","",null,null],[3,"Graph","br::correct::graph","",null,null],[11,"new","","",2,[[["boxkmerset",6]]]],[0,"greedy","br::correct","",null,null],[3,"Greedy","br::correct::greedy","",null,null],[11,"new","","",3,[[["boxkmerset",6]]]],[0,"one","br::correct","",null,null],[3,"One","br::correct::one","",null,null],[11,"new","","",4,[[["boxkmerset",6]]]],[8,"Corrector","br::correct","",null,null],[10,"valid_kmer","","",5,[[],["boxkmerset",6]]],[10,"correct_error","","",5,[[],["option",4]]],[11,"k","","",5,[[]]],[11,"correct","","",5,[[],["vec",3]]],[0,"error","br","",null,null],[4,"Error","br::error","All error produce by Pcon",null,null],[13,"Cli","","See enum [Cli]",6,null],[13,"IO","","See enum [IO]",6,null],[13,"CantComputeAbundance","","",6,null],[4,"Cli","","Error emmit durring Cli parsing",null,null],[13,"NotSameNumberOfInAndOut","","Number of inputs and outputs must be the same",7,null],[13,"NoSolidityNoKmer","","",7,null],[13,"KmerSolidNeedK","","",7,null],[4,"IO","","Error emmit when pcon try to work with file",null,null],[13,"CantCreateFile","","We can\'t create file. In C binding it\'s equal to 0",8,null],[13,"CantOpenFile","","We can\'t open file. In C binding it\'s equal to 1",8,null],[13,"ErrorDurringWrite","","Error durring write in file. In C binding it\'s equal to 2",8,null],[13,"ErrorDurringRead","","Error durring read file. In C binding it\'s equal to 3",8,null],[13,"NoError","","No error, this exist only for C binding it\'s the value of â€¦",8,null],[0,"set","br","",null,null],[0,"hash","br::set","",null,null],[3,"Hash","br::set::hash","",null,null],[11,"new","","",9,[[["vec",3]]]],[0,"pcon","br::set","",null,null],[3,"Pcon","br::set::pcon","",null,null],[11,"new","","",10,[[["solid",3]]]],[8,"KmerSet","br::set","",null,null],[10,"get","","",11,[[]]],[10,"k","","",11,[[]]],[6,"BoxKmerSet","","",null,null],[5,"run_correction","br","",null,[[["vec",3],["box",3]],["result",6]]],[5,"build_methods","","",null,[[["option",4],["vec",3],["boxkmerset",6]],[["vec",3],["box",3]]]],[5,"set_nb_threads","","Set the number of threads use by count step",null,[[]]],[11,"from","br::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","br::correct::gap_size","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","br::correct::graph","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","br::correct::greedy","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","br::correct::one","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","br::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"as_error_source","","",6,[[],["error",8]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"as_error_source","","",7,[[],["error",8]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"as_error_source","","",8,[[],["error",8]]],[11,"vzip","","",8,[[]]],[11,"from","br::set::hash","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","br::set::pcon","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"valid_kmer","br::correct::gap_size","",1,[[],["boxkmerset",6]]],[11,"correct_error","","",1,[[],["option",4]]],[11,"valid_kmer","br::correct::graph","",2,[[],["boxkmerset",6]]],[11,"correct_error","","",2,[[],["option",4]]],[11,"k","br::correct::greedy","",3,[[]]],[11,"valid_kmer","","",3,[[],["boxkmerset",6]]],[11,"correct_error","","",3,[[],["option",4]]],[11,"valid_kmer","br::correct::one","",4,[[],["boxkmerset",6]]],[11,"correct_error","","",4,[[],["option",4]]],[11,"get","br::set::hash","",9,[[]]],[11,"k","","",9,[[]]],[11,"get","br::set::pcon","",10,[[]]],[11,"k","","",10,[[]]],[11,"from","br::error","",6,[[["cli",4]]]],[11,"from","","",6,[[["io",4]]]],[11,"fmt","br::cli","",0,[[["formatter",3]],["result",6]]],[11,"fmt","br::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["error",8],["option",4]]]],[11,"into_app","br::cli","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Command"],[3,"GapSize"],[3,"Graph"],[3,"Greedy"],[3,"One"],[8,"Corrector"],[4,"Error"],[4,"Cli"],[4,"IO"],[3,"Hash"],[3,"Pcon"],[8,"KmerSet"]]},\
"br_large":{"doc":"","i":[[3,"Command","br_large","",null,null],[12,"inputs","","",0,null],[12,"outputs","","",0,null],[12,"kmer_solid","","",0,null],[12,"kmer_size","","",0,null],[12,"methods","","",0,null],[12,"confirm","","",0,null],[12,"max_search","","",0,null],[12,"two_side","","",0,null],[12,"threads","","",0,null],[12,"record_buffer","","",0,null],[12,"verbosity","","",0,null],[5,"main","","",null,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Command"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);